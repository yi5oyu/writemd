export const TemplateContents = [
  {
    default: [
      {
        title: '깃 템플릿',
        subtitle: 'git template',
        content: `---
# yaml 헤더 필드

# 템플릿 이름
name: '이슈 템플릿'
# 이슈 제목 기본값
about: '이슈 템플릿 설명'
# 이슈 제목(기본값)
title: '[이슈 유형] '
# 라벨
labels: 'custom'
# 이슈 담당자
assignees: ''
# 연결할 마일스톤 ID (Issues > Milestones에서 마일스톤 ID 확인 가능)
milestone: ''
---

## 📌 이슈 설명
<!-- 이슈에 대해 간단히 설명해주세요. -->

## 🎯 목표
<!-- 이 이슈를 통해 달성하고자 하는 목표를 작성해주세요. -->

## ✅ 작업 내용
- [ ] 작업 항목 1
- [ ] 작업 항목 2
- [ ] 작업 항목 3

## 🚧 주의사항
<!-- 이슈를 해결할 때 주의해야 할 점이 있다면 작성해주세요. -->

## 📎 참고 자료
<!-- 관련된 문서나 링크가 있다면 첨부해주세요. -->

## 💬 추가 코멘트
<!-- 추가로 논의하고 싶은 점이 있다면 작성해주세요. -->`,
      },
      {
        title: '프로젝트',
        subtitle: 'project',
        content: `# 프로젝트 이름

![프로젝트 배지](https://img.shields.io/badge/version-1.0.0-blue) 
![라이선스](https://img.shields.io/badge/license-MIT-green)

간단한 프로젝트 소개 (1-2문장).

## 목차
- [기능](#기능)
- [설치 방법](#설치-방법)
- [사용법](#사용법)
- [기술 스택](#기술-스택)

## 기능
- 주요 기능 1
- 주요 기능 2
- 주요 기능 3

## 설치 방법
\`\`\`bash
git clone https://github.com/your-username/project-name.git
\`\`\`

## 사용법

\`\`\`JavaScript
# 예시 코드
console.log("Hello World!")
\`\`\`

## 기술 스택

- 언어: JavaScript
- 프레임워크: React
`,
      },
    ],
  },
  {
    github: [
      {
        title: '버그 리포트',
        subtitle: 'bug report',
        content: `---
name: 🐛 버그 리포트
about: 버그를 보고할 때 사용하는 템플릿
title: "[BUG] "
labels: bug, urgent
assignees: user1, user2
milestone: 1
---

## 🐞 문제 설명
<!-- 버그에 대한 간결한 설명해주세요. -->

## 📝 발생 상황
<!-- 어떤 상황에서 발생한 버그인지 설명해주세요. -->

- **상황 설명**: 
- **행동 설명**: 
- **문제 발생 설명**: 

## 🎯 예상 동작 vs 실제 동작
<!--- 예상했던 정상적인 결과가 어떤 것이었는지 설명해주세요. -->

- **예상:** [예상한 정상 동작]
- **실제:** [발생한 오류 동작]

## 📋 추가정보
<!--- 추가적인 로그, 스크린샷, 또는 관련 정보가 있다면 첨부해주세요. -->`,
      },
      {
        title: '코드 스타일',
        subtitle: 'code style',
        content: `---
name: 🎨 코드 스타일
about: 코드 스타일 개선을 위한 이슈 템플릿
title: '[STYLE] '
labels: 'style'
assignees: ''
---

## 📝 개선 목표
<!-- 코드 스타일 개선의 주요 목표를 간단히 설명해주세요 -->

## 📚 적용할 스타일 가이드
<!-- 적용할 코드 스타일 가이드나 규칙을 명시해주세요 -->

## 🔍 개선 대상 파일
- [ ] 파일1
- [ ] 파일2
- [ ] 파일3

## ✅ 체크리스트
- [ ] **코드 가독성**
  - 코드가 이해하기 쉽고 따라할 수 있는지 확인
  - 코드가 명확한 로직과 구성을 보여주는지 확인
- [ ] **코딩 스타일**
  - 코딩 표준 및 규칙 준수 확인
  - 형식과 들여쓰기가 일관성 있는지 확인
- [ ] **명명 규칙**
  - 변수, 기능 및 클래스에 목적을 반영하는 설명적이고 의미 있는 이름이 있는지 확인
  - 일관된 대소문자 규칙을 따르고 있는지 확인
- [ ] **코드 구조 및 디자인**
  - 코드의 구조가 모듈화되어 있고 설계 원칙을 준수하는지 평가
  - 함수/메서드 길이가 적절한지 확인
  - 중복 코드가 없는지 확인
  - 적절한 추상화 수준을 유지하고 있는지 확인
- [ ] **포맷팅**
  - 일관된 들여쓰기를 사용하고 있는지 확인
  - 괄호 사용이 일관적인지 확인
  - 연산자 주변 공백이 적절한지 확인
- [ ] **주석**
  - 복잡한 로직에 대한 설명이 충분한지 확인
  - 불필요한 주석은 없는지 확인
  - 주석이 코드의 변경사항을 반영하고 있는지 확인
- [ ] **코드 품질**
  - 불필요한 복잡성은 없는지 확인
  - 매직 넘버를 상수로 정의했는지 확인
  - 예외 처리가 적절히 이루어졌는지 확인

## 📝 추가 설명
<!-- 필요한 경우 추가 설명을 작성해주세요 -->

## 🔗 관련 이슈
<!-- 관련된 이슈가 있다면 링크를 추가해주세요 -->`,
      },
      {
        title: '디자인',
        subtitle: 'design',
        content: `---
name: 🎨 디자인 
about: 디자인 관련 작업을 위한 이슈 템플릿입니다.
title: '[DESIGN] '
labels: 'design'
assignees: ''
---

## 🖼 디자인 개요
<!-- 작업할 디자인에 대한 간단한 설명을 작성해주세요 -->

## 🎯 목표
<!-- 이 디자인 작업의 목표를 명확히 설명해주세요 -->

## ✅ 작업 항목
- [ ] 컴포넌트 UI 추가
- [ ] 레이아웃 설계
- [ ] 스타일 구현
- [ ] 이벤트
- [ ] 반응형 디자인 고려

## 🔗 참고 자료
<!-- 참고할 디자인 가이드라인, 무드보드 또는 관련 링크를 첨부해주세요 -->

## 💬 추가 설명
<!-- 추가적으로 논의할 사항이나 리뷰어에게 전달할 코멘트를 작성해주세요 -->`,
      },
      {
        title: '문서',
        subtitle: 'document',
        content: `---
name: 📄 문서
about: 프로젝트 문서화 작업을 위한 이슈 템플릿입니다.
title: "[DOCS] "
labels: documentation
---

## 🧭 문서 위치
- 파일 경로: [예: "docs/getting-started.md"]

## 📚 문서화 작업 내용
<!-- 어떤 문서를 작성하거나 수정할 예정인지 설명해주세요. -->

## 🎯 목적
<!-- 이 문서화 작업 목적을 설명해주세요. -->

## 📋 작업 항목

- [ ] 항목 1
- [ ] 항목 2
- [ ] 항목 3

## 📎 참고 자료
<!-- 문서 작성에 참고할 자료나 링크가 있다면 첨부해주세요. -->

## 🖼 스크린샷 (선택사항)
<!-- 필요한 경우 관련 스크린샷을 첨부해주세요. -->

## 📝 추가 정보
<!-- 문서화 작업에 대한 추가 정보나 컨텍스트가 있다면 여기에 적어주세요. -->`,
      },
      {
        title: '기능',
        subtitle: 'feature',
        content: `---
name: ✨ 기능
about: 새로운 기능이나 개선 사항을 제안합니다.
title: "[FEATURE] "
labels: enhancement, feature
---

## 💡 기능 설명
<!-- 어떤 기능인지 간단히 설명해주세요. -->

## 🎯 목적
<!-- 이 기능이 어떤 문제를 해결할지 설명해주세요. -->

## 🛠 구현 방법
<!-- 이 기능을 어떻게 구현할 수 있을까요? 아이디어가 있다면 공유해주세요. -->

## ✅ 작업 내용
- [ ] 사용성 개선
- [ ] 성능 최적화
- [ ] 호환성 확대

- 작업할 내용: [상세 설명]

## 🖼 스크린샷
<!-- 기능에 대한 시각적 설명이 있다면 첨부해주세요. -->

## 📝 추가 정보
<!-- 관련 링크, 스크린샷 등 -->`,
      },
      {
        title: '성능 개선',
        subtitle: 'performance',
        content: `---
name: 🚀 성능 개선
about: 애플리케이션의 성능을 개선하기 위한 작업을 기록합니다.
title: '[PERFORMANCE] '
labels: 'performance'
assignees: ''
---

## 📝 성능 개선 목표
<!-- 개선하려는 성능 문제와 목표를 간단히 설명해주세요. -->
<!-- 페이지 로딩 속도 단축, API 응답 시간 개선, 메모리 사용 최적화... -->

## 📊 현재 상태
<!-- 현재 성능 상태를 설명해주세요. -->
<!-- 페이지 로딩 시간: 5초, API 응답 시간: 2초, 메모리 사용량: 500MB... -->

## 🔧 개선 방법 제안
<!-- 성능을 개선하기 위한 구체적인 방법을 제안해주세요. -->
<!-- 데이터베이스 쿼리 최적화, 캐싱 전략 적용...  -->

## 📈 예상 결과
<!-- 성능 개선 후 기대되는 결과를 작성해주세요. -->
<!-- 페이지 로딩 시간: 5초 → 2초, API 응답 시간: 2초 → 500ms... -->

## ✅ 체크리스트
- [ ] 현재 상태 분석 완료
- [ ] 개선 방법 검토 및 구현 계획 수립
- [ ] 테스트 코드 작성 및 실행
- [ ] 성능 테스트 결과 검토

## 💬 추가 정보
<!-- 추가 정보나 참고 사항을 작성해주세요. -->`,
      },
      {
        title: '리팩토링',
        subtitle: 'refactor',
        content: `---
name: 🔧 리팩토링
about: 리팩토링 작업을 위한 이슈 템플릿입니다.
title: '[REFACTOR] '
labels: 'refactor'
assignees: ''
---

## ✨ 리팩토링 목표
<!-- 리팩토링의 목적과 기대 효과를 간단히 설명해주세요. -->
<!-- 코드 가독성 향상, 성능 개선, 유지보수 용이성 증대... -->

## 📂 대상 파일/코드
<!-- 리팩토링이 필요한 파일이나 코드 섹션을 명시해주세요. -->
<!-- "src/components/Button.js"... -->

## 🛠️ 작업 상세 내용
<!-- 리팩토링 작업에 대한 구체적인 내용을 작성해주세요. -->
<!-- 중복 코드 제거, 함수 분리 및 재사용성 강화, 변수명 및 함수명 개선... -->

## ✅ 체크리스트
- [ ] 기존 기능이 정상적으로 작동하는지 확인
- [ ] 테스트 코드 작성 또는 수정
- [ ] 코드 스타일 가이드 준수
- [ ] 성능 테스트 완료

## 📈 예상 결과
<!-- 리팩토링 후 기대되는 결과를 작성해주세요. -->
<!-- 코드 라인 수 감소 (예: 500줄 → 300줄), 컴포넌트 렌더링 속도 향상... --> 

## 💬 추가 정보
<!-- 추가 정보나 참고 사항을 작성해주세요. -->`,
      },
      {
        title: '설정',
        subtitle: 'setting',
        content: `---
name: ⚙️ 설정
about: 프로젝트 설정에 관한 이슈를 생성합니다.
title: '[setting] '
labels: setting, frontend, backend
assignees: ''
---

## 📝 설정 내용
<!-- 변경하거나 추가할 설정에 대해 설명해주세요. -->
<!-- Frontend: ESLint 및 Prettier 설정 추가, Backend: Checkstyle + Google Java Format 설정 추가... -->

## 🎯 목적
<!-- 설정 변경 목적을 설명해주세요. -->
<!-- Frontend: 코드 품질 유지 및 일관된 스타일 적용, Backend: Java 코드 품질 표준화... -->

## 🛠 변경 사항
<!-- 구체적으로 어떤 설정을 어떻게 변경할 것인지 설명해주세요. -->
<!-- Frontend: "eslint-config-airbnb" 패키지 설치, Backend: Checkstyle/Google Java Format 플러그인 추가 -->

## 📚 참고 자료
<!-- 관련 문서나 참고 링크가 있다면 첨부해주세요. -->`,
      },
      {
        title: '풀 리퀘스트',
        subtitle: 'Pull Request',
        content: `---
name: 풀 리퀘스트
about: 코드 변경 사항을 제출하고 리뷰를 요청합니다.
title: '[PR] '
labels: ''
assignees: ''
---

## 🧰 변경 유형
- [ ] ✨ 기능 (Feature)
- [ ] 🐛 버그 수정 (Bug Fix)
- [ ] 📄 문서 업데이트 (Documentation)
- [ ] 🎨 디자인/코드스타일 개선 (Design)
- [ ] 🔧 리팩토링 (Refactoring)
- [ ] 🚀 성능 개선 (Performance)
- [ ] ⚙️ 설정 변경 (Configuration)

## ✒️ 변경 내용 요약
<!-- 변경된 내용을 간단히 요약해주세요. -->
<!-- 새로운 API 엔드포인트 추가 -->

## 📝 관련 이슈
<!-- 해결하려는 이슈 번호를 연결해주세요. -->
<!-- Fixes (#123) -->

## ✅ 체크리스트
- [ ] 코드 스타일 가이드라인을 준수했습니다.
- [ ] 코드가 정상적으로 동작하는지 확인했습니다.
- [ ] 테스트를 작성하거나 기존 테스트가 통과하는지 확인했습니다.
- [ ] 문서를 업데이트했습니다.

## 📢 요청 사항
<!-- 집중해서 봐야 할 부분이나 특별히 확인해야 할 점이 있다면 작성해주세요. -->

## 📸 스크린샷
<!-- 변경 사항을 시각적으로 보여줄 수 있는 스크린샷을 첨부해주세요. -->

## 🌐 추가 정보
<!-- 리뷰어가 알아야 할 추가 정보나 참고 사항을 작성해주세요. -->

## 🔗 참고 자료
<!-- 관련 문서나 참고 링크가 있다면 첨부해주세요. -->`,
      },
    ],
  },
]
