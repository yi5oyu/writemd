plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

group = 'com.writemd'
version = '0.0.1-SNAPSHOT'

// checkstyle 설정
checkstyle {
	toolVersion = '10.11.0'
	configFile = file("${rootDir}/checkstyle/checkstyle-writemd.xml")
}

tasks.withType(Checkstyle) {
	reports {
		html.required = true
		xml.required = false
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
	set('springAiVersion', "1.0.0")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    mavenCentral() 
}

dependencies {
	// spring web
	implementation 'org.springframework.boot:spring-boot-starter-web'
  //	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'com.h2database:h2'
	implementation 'com.mysql:mysql-connector-j'

	// 보안
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// 유틸리티
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// 모니터링
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	// 환경변수
	implementation 'io.github.cdimascio:dotenv-java:3.2.0'
	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Spring AI MCP Client, openai, anthropic(claude)
  //	implementation 'org.springframework.ai:spring-ai-starter-mcp-server-webmvc'
	implementation 'org.springframework.ai:spring-ai-starter-mcp-client'

  	implementation 'org.springframework.ai:spring-ai-starter-model-anthropic'
	// implementation 'org.springframework.ai:spring-ai-anthropic'

  	implementation 'org.springframework.ai:spring-ai-starter-model-openai'
	// implementation 'org.springframework.ai:spring-ai-openai'
  //	implementation 'org.springframework.ai:spring-ai-starter-model-ollama'

	implementation 'org.kohsuke:github-api:1.321'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

// QueryDSL
def querydslDir = 'src/main/generated'

clean {
	delete file(querydslDir)
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslDir)
}

tasks.named('test') {
	useJUnitPlatform()
}