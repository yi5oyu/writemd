version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql-md
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: md
      MYSQL_USER: yi5oyu
      MYSQL_PASSWORD: ${MYSQL_USER_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - '3307:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis-md
    ports:
      - '6380:6379'
    command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysql-exporter
    ports:
      - '9104:9104'
    environment:
      DATA_SOURCE_NAME: yi5oyu:${MYSQL_USER_PASSWORD}@tcp(mysql-md:3306)/md
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - '9121:9121'
    environment:
      - REDIS_ADDR=redis-md:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - app-network
    restart: unless-stopped

  py-mcp-server:
    image: ghcr.io/yi5oyu/writemd-py-mcp-server:latest
    container_name: py-mcp-server
    ports:
      - '9889:9889'
    environment:
      - HOST=0.0.0.0
      - PORT=9889
    restart: unless-stopped
    networks:
      - app-network

  backend:
    image: ghcr.io/yi5oyu/writemd-backend:latest
    container_name: backend-app
    ports:
      - '8888:8888'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - MYSQL_PASSWORD=${MYSQL_USER_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_REDIRECT_URI=${GITHUB_REDIRECT_URI}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - db
      - redis
      - py-mcp-server
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    image: ghcr.io/yi5oyu/writemd-frontend:latest
    container_name: frontend-app
    ports:
      - '5173:80'
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-tunnel
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  portainer_data:

networks:
  app-network:
    driver: bridge
