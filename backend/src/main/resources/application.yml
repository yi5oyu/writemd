spring:
  application:
    name: backend
  mvc:
    async:
      request-timeout: 300000
  # devtools 설정
  devtools:
    livereload:
      enabled: false
    restart:
      enabled: true
  # DB 설정
  datasource:
    url: jdbc:mysql://localhost:3307/md?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: yi5oyu
    password: ${MYSQL_PASSWORD}
    # url: jdbc:h2:file:./data/chatdb
    # driver-class-name: org.h2.Driver
    # username: sa
    # password:
  # h2:
  #   console:
  #     enabled: true
  #     path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect # org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: false
  data:
    redis:
      host: localhost
      port: 6380
      password: ${REDIS_PASSWORD}
  # 보안
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            redirect-uri: 'http://localhost:8888/login/oauth2/code/github'
            scope: read:user, user:email, repo
  # ai
  ai:
#    openai:
#      api-key: ${OPENAI_API_KEY}
#      chat:
#        options:
#          model: gpt-4o
#    anthropic:
#      api-key: ${ANTHROPIC_API_KEY}
#      chat:
#        options:
#          model: claude-3-5-sonnet-20241022
    mcp:
      client:
        toolcallback:
          enabled: true
        sse:
          connections:
#            sb-mcp-server:
#              url: http://localhost:9888
            py-mcp-server:
              url: http://localhost:9889

management:
  endpoints:
    web:
      exposure:
        include: '*'
        exclude: 'info'
  endpoint:
    health:
      show-details: always

server:
  port: 8888
  tomcat:
    connection-timeout: 300000  # 5분
  servlet:
    session:
      timeout: 30m
logging:
  level:
    org.springframework.ai: INFO
