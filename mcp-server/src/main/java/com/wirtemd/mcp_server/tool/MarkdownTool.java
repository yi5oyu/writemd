package com.wirtemd.mcp_server.tool;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.ai.chat.client.ChatClient;
import org.springframework.ai.tool.annotation.Tool;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

@Component
public class MarkdownTool {

    private static final Logger log = LoggerFactory.getLogger(MarkdownTool.class);

    public record Request(
        String owner,
        String repo,
        String path
    ) {}

    @Tool(description = "마크다운 문서를 검토하고 수정할 때 참고할 수 있는 주요 확인 항목 체크리스트를 제공합니다.")
    public String reviewMarkdown(Request request) {
        log.info("getMarkdownReviewChecklist 호출됨.");

        String checklist = """
            **마크다운 문서 검토 및 수정 가이드라인:**

            다음 항목들을 참고하여 마크다운 문서를 검토하고 개선할 수 있습니다:

            1.  **문법 정확성:**
                * 헤더 (`#`), 목록 (`*`, `-`, `1.`), 인용 (`>`), 코드 블록 (```), 인라인 코드 (` `` `) 등 기본 마크다운 문법이 올바르게 사용되었는지 확인하세요.
                * 링크 (`[텍스트](URL)`)와 이미지 (`![대체 텍스트](이미지 URL)`) 구문이 정확하고, URL이 유효한지 확인하세요.
                * 테이블 문법 (헤더 구분선 `---|---` 등)이 올바른지 확인하세요.
                * 강조 (`*기울임*`, `**굵게**`) 및 취소선 (`~~취소선~~`)이 적절하게 사용되었는지 확인하세요.

            2.  **구조 및 가독성:**
                * 문서의 논리적 흐름에 맞게 헤더 레벨(H1, H2, H3...)이 일관되게 사용되었는지 확인하세요. (예: H1 다음에 바로 H3가 오지 않도록)
                * 내용 구분을 위해 문단 사이에 적절한 빈 줄이 있는지 확인하세요.
                * 긴 설명보다는 목록을 사용하여 정보를 명확하게 전달하고 있는지 검토하세요.
                * 문장이 너무 길거나 복잡하지 않은지, 명확하고 간결하게 작성되었는지 확인하세요.

            3.  **스타일 일관성:**
                * 목록 마커 (`*`, `-`, `+` 중 하나로 통일) 사용이 일관적인지 확인하세요.
                * 코드 블록에 언어(예: ```java)가 명시되어 가독성을 높이는지 확인하세요.
                * 전체적인 **서식** (들여쓰기, 공백 등) 스타일이 일관적인지 확인하세요.

            4.  **내용 오류 (AI가 특히 잘 할 수 있는 부분):**
                * 맞춤법, 띄어쓰기, 문법 오류는 없는지 확인하세요.
                * 어색하거나 부자연스러운 표현은 없는지 검토하고 더 나은 표현을 제안하세요.
                * 기술 문서의 경우, 용어 사용이 정확하고 일관적인지 확인하세요.

            *이 가이드라인을 바탕으로 주어진 마크다운 콘텐츠를 분석하고, 필요한 수정 사항이나 개선점을 제안해주세요.*
            
            만약 특별한 오류가 없다면 "문법 및 맞춤법상 특별한 오류가 발견되지 않았습니다." 라고 응답해주세요.
            """;

        return checklist;
    }

    @Tool(description = "마크다운 문서를 검토하고 수정할 때 참고할 수 있는 주요 확인 항목 체크리스트를 제공합니다.")
    public String convertMarkdown() {
        log.info("getMarkdownReviewChecklist 호출됨.");

        String checklist = """
            **마크다운 문서 검토 및 수정 가이드라인:**

            다음 항목들을 참고하여 마크다운 문서를 검토하고 개선할 수 있습니다:

            1.  **문법 정확성:**
                * 헤더 (`#`), 목록 (`*`, `-`, `1.`), 인용 (`>`), 코드 블록 (```), 인라인 코드 (` `` `) 등 기본 마크다운 문법이 올바르게 사용되었는지 확인하세요.
                * 링크 (`[텍스트](URL)`)와 이미지 (`![대체 텍스트](이미지 URL)`) 구문이 정확하고, URL이 유효한지 확인하세요.
                * 테이블 문법 (헤더 구분선 `---|---` 등)이 올바른지 확인하세요.
                * 강조 (`*기울임*`, `**굵게**`) 및 취소선 (`~~취소선~~`)이 적절하게 사용되었는지 확인하세요.

            2.  **구조 및 가독성:**
                * 문서의 논리적 흐름에 맞게 헤더 레벨(H1, H2, H3...)이 일관되게 사용되었는지 확인하세요. (예: H1 다음에 바로 H3가 오지 않도록)
                * 내용 구분을 위해 문단 사이에 적절한 빈 줄이 있는지 확인하세요.
                * 긴 설명보다는 목록을 사용하여 정보를 명확하게 전달하고 있는지 검토하세요.
                * 문장이 너무 길거나 복잡하지 않은지, 명확하고 간결하게 작성되었는지 확인하세요.

            3.  **스타일 일관성:**
                * 목록 마커 (`*`, `-`, `+` 중 하나로 통일) 사용이 일관적인지 확인하세요.
                * 코드 블록에 언어(예: ```java)가 명시되어 가독성을 높이는지 확인하세요.
                * 전체적인 **서식** (들여쓰기, 공백 등) 스타일이 일관적인지 확인하세요.

            4.  **내용 오류 (AI가 특히 잘 할 수 있는 부분):**
                * 맞춤법, 띄어쓰기, 문법 오류는 없는지 확인하세요.
                * 어색하거나 부자연스러운 표현은 없는지 검토하고 더 나은 표현을 제안하세요.
                * 기술 문서의 경우, 용어 사용이 정확하고 일관적인지 확인하세요.

            *이 가이드라인을 바탕으로 주어진 마크다운 콘텐츠를 분석하고, 필요한 수정 사항이나 개선점을 제안해주세요.*
            
            만약 특별한 오류가 없다면 "문법 및 맞춤법상 특별한 오류가 발견되지 않았습니다." 라고 응답해주세요.
            """;

        return checklist;
    }

}
